{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","find","tab","id","activeId","activeContent","content","className","map","href","onClick","title","App","useState","tabId","setTabId","activeTab","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAAO,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,cAC1C,EAGIF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAAkBD,EAAK,GAFjDM,EADN,EACED,GACSE,EAFX,EAEEC,QAGF,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BAEIT,EAAKU,KAAI,SAAAN,GAAG,OACV,oBAEEK,UAAWL,EAAIC,KAAOC,EAAW,YAAc,GAC/C,UAAQ,MAHV,SAKE,mBACEK,KAAI,WAAMP,EAAIC,IACd,UAAQ,UACRO,QAAS,kBAAOR,EAAIC,KAAOC,GAAaJ,EAAcE,IAHxD,SAKGA,EAAIS,SATFT,EAAIC,WAiBnB,qBAAKI,UAAU,QAAQ,UAAQ,aAA/B,SACGF,QChCIP,EAAc,CACzB,CAAEK,GAAI,QAASQ,MAAO,QAASL,QAAS,eACxC,CAAEH,GAAI,QAASQ,MAAO,QAASL,QAAS,eACxC,CAAEH,GAAI,QAASQ,MAAO,QAASL,QAAS,gBAG7BM,EAAgB,WAC3B,MAA0BC,mBAASf,EAAK,GAAGK,IAA3C,mBAAOW,EAAP,KAAcC,EAAd,KACMC,EAAYlB,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOW,MAAUhB,EAAK,GAE7D,OACE,sBAAKS,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBS,EAAUL,SAGhC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAee,EACfd,cAAe,SAACE,GAAD,OAAca,EAASb,EAAIC,WCvBlDc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4d16c0ba.chunk.js","sourcesContent":["import { Tab } from '../../type';\n\ntype TabsProps = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }: TabsProps) => {\n  const {\n    id: activeId,\n    content: activeContent,\n  } = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map(tab => (\n              <li\n                key={tab.id}\n                className={tab.id === activeId ? 'is-active' : ''}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => (tab.id !== activeId) && onTabSelected(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {activeContent}\n      </div>\n    </div>\n\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './type';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [tabId, setTabId] = useState(tabs[0].id);\n  const activeTab = tabs.find(tab => tab.id === tabId) || tabs[0];\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${activeTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={tabId}\n        onTabSelected={(tab: Tab) => setTabId(tab.id)}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}